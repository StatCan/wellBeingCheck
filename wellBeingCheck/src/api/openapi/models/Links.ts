/* tslint:disable */
/* eslint-disable */
/**
 * Pilot Mobile App API
 * API to support retreiving config data, submit app paradata and obtain graphs to be used by the WellBeringCheck mobile app.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    BilingualLink,
    BilingualLinkFromJSON,
    BilingualLinkFromJSONTyped,
    BilingualLinkToJSON,
} from './';

/**
 * 
 * @export
 * @interface Links
 */
export interface Links {
    /**
     * 
     * @type {BilingualLink}
     * @memberof Links
     */
    questionnaireA?: BilingualLink;
    /**
     * 
     * @type {BilingualLink}
     * @memberof Links
     */
    questionnaireB?: BilingualLink;
    /**
     * 
     * @type {BilingualLink}
     * @memberof Links
     */
    confirmationPage?: BilingualLink;
    /**
     * 
     * @type {BilingualLink}
     * @memberof Links
     */
    exceptionPage?: BilingualLink;
}

export function LinksFromJSON(json: any): Links {
    return LinksFromJSONTyped(json, false);
}

export function LinksFromJSONTyped(json: any, ignoreDiscriminator: boolean): Links {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'questionnaireA': !exists(json, 'questionnaireA') ? undefined : BilingualLinkFromJSON(json['questionnaireA']),
        'questionnaireB': !exists(json, 'questionnaireB') ? undefined : BilingualLinkFromJSON(json['questionnaireB']),
        'confirmationPage': !exists(json, 'confirmationPage') ? undefined : BilingualLinkFromJSON(json['confirmationPage']),
        'exceptionPage': !exists(json, 'exceptionPage') ? undefined : BilingualLinkFromJSON(json['exceptionPage']),
    };
}

export function LinksToJSON(value?: Links | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'questionnaireA': BilingualLinkToJSON(value.questionnaireA),
        'questionnaireB': BilingualLinkToJSON(value.questionnaireB),
        'confirmationPage': BilingualLinkToJSON(value.confirmationPage),
        'exceptionPage': BilingualLinkToJSON(value.exceptionPage),
    };
}


